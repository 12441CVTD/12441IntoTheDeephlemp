Index: TeamCode/src/main/java/developing/FTCAutoAimer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package developing;\n\n\npublic class FTCAutoAimer {\n    // Set these to their actual values\n    public final double boardAngle = 20 * Math.PI/180; // degrees -> radians\n    public final double goalFromLeft = 0.9; // meters\n    public final double goalHeight = 0.9; // meters\n    public final double shooterHeight = 0.25; // meters\n    public final double shooterWheelRadius = 0.05; // meters\n\n//    public static void main(String[] args) {\n//        setSpeed(calcSpeed(1.5, 0.9));\n//    }\n\n    public double calcSpeed(double disFromFront, double disFromLeft) {\n        double disToGoal = Math.sqrt(Math.pow(disFromFront, 2) + Math.pow(disFromLeft - goalFromLeft, 2));\n        double deltaHeight = goalHeight - shooterHeight;\n        double linearSpeed = disToGoal/Math.cos(boardAngle) * Math.sqrt(4.9/(disToGoal * Math.tan(boardAngle) - deltaHeight));\n        return linearSpeed/shooterWheelRadius;\n    }\n\n//    public void setSpeed(double speed) {\n//        // The PID Controller\n//        System.out.println(\"Set speed to \" + speed + \" rad/s, or \" + (speed*shooterWheelRadius) + \" m/s\");\n//    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- TeamCode/src/main/java/developing/FTCAutoAimer.java	(revision 926958e5d337a2be85ee87ee6bebf79602e71544)
+++ TeamCode/src/main/java/developing/FTCAutoAimer.java	(date 1614733224000)
@@ -1,27 +1,15 @@
 package developing;
 
 
+import global.Constants;
+
 public class FTCAutoAimer {
-    // Set these to their actual values
-    public final double boardAngle = 20 * Math.PI/180; // degrees -> radians
-    public final double goalFromLeft = 0.9; // meters
-    public final double goalHeight = 0.9; // meters
-    public final double shooterHeight = 0.25; // meters
-    public final double shooterWheelRadius = 0.05; // meters
-
-//    public static void main(String[] args) {
-//        setSpeed(calcSpeed(1.5, 0.9));
-//    }
 
     public double calcSpeed(double disFromFront, double disFromLeft) {
-        double disToGoal = Math.sqrt(Math.pow(disFromFront, 2) + Math.pow(disFromLeft - goalFromLeft, 2));
-        double deltaHeight = goalHeight - shooterHeight;
-        double linearSpeed = disToGoal/Math.cos(boardAngle) * Math.sqrt(4.9/(disToGoal * Math.tan(boardAngle) - deltaHeight));
-        return linearSpeed/shooterWheelRadius;
+        double disToGoal = Math.sqrt(Math.pow(disFromFront, 2) + Math.pow(disFromLeft - Constants.GOAL_FROM_LEFT, 2));
+        double deltaHeight = Constants.GOAL_HEIGHT - Constants.SHOOTER_HEIGHT;
+        double linearSpeed = disToGoal/Math.cos(Constants.OUTTAKE_ANGLE) * Math.sqrt(4.9/(disToGoal * Math.tan(Constants.OUTTAKE_ANGLE) - deltaHeight));
+        return linearSpeed/Constants.SHOOTER_WHEEL_RADIUS;
     }
 
-//    public void setSpeed(double speed) {
-//        // The PID Controller
-//        System.out.println("Set speed to " + speed + " rad/s, or " + (speed*shooterWheelRadius) + " m/s");
-//    }
 }
\ No newline at end of file
Index: TeamCode/src/main/java/global/Constants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- TeamCode/src/main/java/global/Constants.java	(date 1614734256000)
+++ TeamCode/src/main/java/global/Constants.java	(date 1614734256000)
@@ -0,0 +1,18 @@
+package global;
+
+public class Constants {
+    public static final double MAX_OUTTAKE_SPEED = 200 * Math.PI; // rad/s
+    public static final double LR_TO_OUTTAKE = 0.2; // meters
+    public static final double FR_TO_OUTTAKE = 0.2; // meters
+
+    public static final double OUTTAKE_ANGLE = 20 * Math.PI/180; // degrees -> radians
+    public static final double GOAL_FROM_LEFT = 0.9; // meters
+    public static final double GOAL_HEIGHT = 0.9; // meters
+    public static final double SHOOTER_HEIGHT = 0.25; // meters
+    public static final double SHOOTER_WHEEL_RADIUS = 0.05; // meters
+
+    public static final double ROBOT_WIDTH = 30; // meters
+    public static final double ROBOT_LENGTH = 33; // meters
+    public static final double ROBOT_RADIUS = Math.sqrt(Math.pow(ROBOT_WIDTH/2, 2) + Math.pow(ROBOT_LENGTH/2, 2)); // meters
+    public static final double CENTER_THETA = Math.atan2(ROBOT_LENGTH, ROBOT_WIDTH); // radians
+}
Index: TeamCode/src/main/java/developing/OuttakeController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- TeamCode/src/main/java/developing/OuttakeController.java	(date 1614734546000)
+++ TeamCode/src/main/java/developing/OuttakeController.java	(date 1614734546000)
@@ -0,0 +1,22 @@
+package developing;
+
+import global.Constants;
+import util.Geometry;
+
+public class OuttakeController {
+    private FTCAutoAimer autoAimer = new FTCAutoAimer();
+    private Geometry geometry = new Geometry();
+    public void getOuttakePower(double robotTheta, double lrDis, double frDis) {
+        robotTheta *= Math.PI/180;
+    }
+    public double getX (double len, double robotTheta){
+        double a = Constants.ROBOT_RADIUS;
+        double cent = Math.PI-Constants.CENTER_THETA;
+        double d = geometry.lawOfCosinesC(len, a, cent);
+        double phi = geometry.lawOfSinesAngle(a, d, cent);
+        double x = d*Math.cos(Math.toRadians(robotTheta)+phi);
+
+        return x;
+
+    }
+}

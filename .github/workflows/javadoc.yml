name: Javadoc Generation
on:
  push:
    branches:
      - "master"
      - "testing-*"
  workflow_dispatch:

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up the JDK environment
        uses: actions/setup-java@v2
        with:
          java-version: 16
          distribution: "adopt"
          cache: gradle

      - name: Gradle version
        run: ./gradlew --version

      - name: Setup Source
        run: |
          rm -rf javadoc-output
          mkdir javadoc-output
          cp -r -p $GRADLE_USER_HOME/caches/modules-2/files-2.1 .
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
#       - name: Install Android Studio
#         run: |
#           cd 659188d07f81a660d5a0f8679f43d00299f855e370caa2911da738f2601badce
#           wget https://r4---sn-a5mekn6s.gvt1.com/edgedl/android/studio/ide-zips/2020.3.1.26/android-studio-2020.3.1.26-linux.tar.gz?cms_redirect=yes&amp;mh=zH&amp;mip=20.106.79.99&amp;mm=28&amp;mn=sn-a5mekn6s&amp;ms=nvh&amp;mt=1641532576&amp;mv=m&amp;mvi=4&amp;pl=18&amp;shardbypass=yes&amp;smhost=r4---sn-a5meknl6.gvt1.com
#           tar -xf android-studio-2020.3.1.26-linux.tar.gz
#           cd android-studio/jre/bin
#       - name: Generate Javadoc
#         run: |
#           ./javadoc -public -splitindex -use -author -version -sourcepath $ANDROID_HOME/platforms/android-29/android.jar --ignore-source-errors -link https://docs.oracle.com/en/java/javase/11/docs/api/ -d ../../../javadoc-output
      - name: Generate Javadoc
        run: -d javadoc-output $(find . -name "*.java") -Xdoclint:none --ignore-source-errors
      - name: Find
        run: find .
      - name: Upload the Javadoc output
        uses: actions/upload-artifact@v2
        with:
          name: Javadoc-output
          path: ./javadoc-output/

      - name: Commit and push the new Javadoc folder
        run: |
          # Set up Git and environment variables
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          shopt -s dotglob
          export BRANCH_NAME=$(echo $GITHUB_REF | sed -e "s/refs\/heads\///")

          # Move Javadoc output and build reports
          mv javadoc-output/ ..
          mkdir ../team-reports/
          mv ./TeamCode/build/reports/*  ../team-reports/
          mkdir ../sdk-reports/
          mv ./FtcRobotController/build/reports/* ../sdk-reports/

          # Checkout gh-pages branch
          git reset --hard HEAD
          git clean -f -d -x
          git remote set-branches origin --add 'gh-pages'
          git fetch -a -v
          git checkout gh-pages

          # Copy Javadoc docs to gh-pages
          rm -rf ./javadocs/${BRANCH_NAME}/ || true
          mkdir -p ./javadocs/${BRANCH_NAME}/
          mv ../javadoc-output/* ./javadocs/${BRANCH_NAME}/

          # Copy build reports to gh-pages
          rm -rf ./reports/${BRANCH_NAME}/ || true
          mkdir -p ./reports/${BRANCH_NAME}/team-reports/
          mkdir -p ./reports/${BRANCH_NAME}/sdk-reports/
          mv ../team-reports/* ./reports/${BRANCH_NAME}/team-reports/
          mv ../sdk-reports/* ./reports/${BRANCH_NAME}/sdk-reports/
          mv ./reports/${BRANCH_NAME}/team-reports/lint-results-debug.html ./reports/${BRANCH_NAME}/team-reports/index.html || true
          mv ./reports/${BRANCH_NAME}/sdk-reports/lint-results-debug.html ./reports/${BRANCH_NAME}/sdk-reports/index.html || true

          # Commit and push changes
          git add -A
          git commit -a -m "Javadoc documentation update ($GITHUB_RUN_NUMBER)

          Information:
            Repository: $GITHUB_REPOSITORY
            Branch: $GITHUB_REF
            Commit: $GITHUB_SHA
            Who triggered action: $GITHUB_ACTOR"
          git push
